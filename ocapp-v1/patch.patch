diff --git a/app/ui/app_main.py b/app/ui/app_main.py
index abc1234..def5678 100644
--- a/app/ui/app_main.py
+++ b/app/ui/app_main.py
@@ -265,19 +265,6 @@ def render_app():
     with tab_commentary:
         st.subheader("One-Glance Commentary")
     
-        # ---------- helpers ----------
-        def _isnum(x):
-            return isinstance(x, (int, float, np.floating)) and np.isfinite(x)
-    
-        def _fmt(x, n=2, suffix=""):
-            return f"{x:.{n}f}{suffix}" if _isnum(x) else "–"
-    
-        def _pct(x):
-            return f"{x*100:.0f}%" if _isnum(x) else "–"
-    
-        def _safe_mean(vs):
-            vs = [v for v in vs if _isnum(v)]
-            return float(np.mean(vs)) if vs else None
-
-        # Direction score: 0 (mean revert) .. 100 (directional)
-        def _direction_score(regime, iv_z, vel_df, up_tbl, down_tbl, net_flow, pcr_ring):
-            score = 50.0
-            ...
-            return int(np.clip(score, 0, 100))
+        # (Removed duplicate _isnum, _fmt, _pct, _safe_mean, and local _direction_score
+        # to avoid shadowing global helpers. Global versions are now reused.)

@@ -560,6 +547,21 @@ def render_app():
             cL1.metric("Median spread (bps)", f"{med_bps:.0f}" if _isnum(med_bps) else "–")
             cL2.metric("Impact proxy (bps)", f"{ic_bps:.0f}" if _isnum(ic_bps) else "–")
             cL3.metric(
                 "Liquidity stress",
                 f"{(stress * 100):.0f} / 100" if _isnum(stress) else "–",
                 help="Higher = harder fills"
             )
+
+            # --- Intraday context line (percentile + z) ---
+            try:
+                key = f"{sym}:{exp}"
+                hist = ss.get("liq_hist", {}).get(key, [])
+                if hist and stress is not None:
+                    import numpy as _np
+                    arr = _np.array([x for x in hist if _np.isfinite(x)], dtype="float64")
+                    if arr.size >= 10 and _np.isfinite(stress):
+                        pct = float((_np.sum(arr <= stress) / arr.size) * 100.0)
+                        mu, sd = float(arr.mean()), float(arr.std(ddof=0)) if arr.std(ddof=0) > 0 else (None, None)
+                        z = ((stress - mu) / sd) if (sd and sd > 0) else None
+                        st.caption(
+                            f"Intraday context: stress ~{pct:.0f}th pct"
+                            + (f" (z={z:+.2f})" if z is not None else "")
+                        )
+            except Exception:
+                pass
